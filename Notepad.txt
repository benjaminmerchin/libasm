Pour un systeme en  bits, il y a les Register Operands suivants :
Les 8 premiers ont egalement de noms alternatifs
Il y en a 16 au total
R0  R1  R2  R3  R4  R5  R6  R7  R8  R9  R10  R11  R12  R13  R14  R15
RAX RCX RDX RBX RSP RBP RSI RDI

INSTRUCTIONS Principales :
mov x, y    x ← y
and x, y	x ← x and y
or x, y     x ← x or y
xor x, y	x ← x xor y
add x, y	x ← x + y
sub x, y	x ← x – y
inc x      	x ← x + 1
dec x   	x ← x – 1
syscall	    Invoke an operating system routine
db	        A pseudo-instruction that declares bytes that will be in memory when the program runs

Les six premiers parametres entiers sont passes dans rdi, rsi, rdx, rcx, r8 et r9 dans cet ordre.
Les autres sont passes par la pile.
Ces registres, ainsi que rax, r10 et r11 sont detruits par les appels de fonctions.
Les registres callee-save sont rbx, r12, ... , r15.
Les param`etres flottants sont pass´es dans xmm0, xmm1,..., xmm7.

Les COMPARATEURS rangent le resultat de la comparaison dans dest
and dest, src
or
xor

add rax, rbx		; xax = xax + xbx
sub

FLAGS (prenent des valeurs en fonctin du resultat de l'operation au dessus)
CF = carry (1 yes, 0 no)
OF = overflow Flag
ZF = zero, (1 yes, 0 no)
SF = negative (1 yes, 0 no)
PF = parity [...]

JUMP			;possibile d'ajouter un n pour avoir l'oppose
jmp labell		;teleporte au labell
je	labell		;si les operations de la ligne au dessus sont =, jump
jne	labell		;jump non equal (check les glags)
ja	labell		; jump above
[...]

CALL
call label		;reviens a la suite une fois le call fini, corresponx en c aux appels de fonctions externes
<=>
push rip	; rip est le pointeur d'instructions, il garde l'addresse de l'instruction
jmp label	; ensuite on jump

ret			;reviens a la suite
<=>
pop rip		;remove l'addr de la next line de code et reviens a la suite du call

IF
cmp rax, rbx		;update les flags
ja label			;si rax est plus grand que rbx, jump

Faire dans l'ordre suivant : 
1) ft_strlen & ft_strcmp & ft_strcpy (utilisation basique)
2) ft_write & ft_read (rajoute la gestion des erreurs)
3) ft_strdup (rajoute l'utilisation de fonctions externes)
